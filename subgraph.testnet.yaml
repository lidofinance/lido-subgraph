specVersion: 0.0.5
description: Lido on Ethereum (Goerli Testnet)
features:
  - grafting
  # - nonFatalErrors
# graft:
#   base: QmWfgdNGGfZfAd3edvpQb98XrCCS6ptYYCkGXkVspadknV # Subgraph ID of base subgraph
#   block: 8710746 # Block number
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Lido
    network: goerli
    source:
      address: '0x1643E812aE58766192Cf7D2Cf9567dF2C37e9B7F'
      abi: Lido
      startBlock: 8710746
      # startBlock: 4533286
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - LidoTransfer
        - LidoSubmission
        - SharesBurn
        - LidoApproval
        # - LidoUnbuffered
        # - LidoWithdrawal
      abis:
        - name: Lido
          file: ./abis/Lido.json
        - name: NodeOperatorsRegistry
          file: ./abis/NodeOperatorsRegistry.json
      eventHandlers:
        - event: Submitted(indexed address,uint256,address)
          handler: handleSubmitted
          receipt: true
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
          receipt: true
        - event: SharesBurnt(indexed address,uint256,uint256,uint256)
          handler: handleSharesBurnt
        - event: ETHDistributed(indexed uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleETHDistributed
          receipt: true
        - event: TokenRebased(indexed uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleTokenRebase
          receipt: true
        # - event: Withdrawal(indexed address,uint256,uint256,indexed bytes32,uint256)
        #   handler: handleWithdrawal

# internally processed (no need handler)
        # - event: TransferShares(indexed address,indexed address,uint256)
        #   handler: handleTransferShares
        # - event: Unbuffered(uint256)
        #   handler: handleUnbuffered
        # - event: CLValidatorsUpdated(uint256 indexed,uint256,uint256)
        #   handler: handleCLValidatorsUpdated
        # - event: WithdrawalsReceived(uint256)
        #   handler: handleWithdrawalsReceived
        # - event: ELRewardsReceived(uint256)
        #   handler: handleELRewardsReceived
        # - event: MevTxFeeReceived(uint256)
        #   handler: handleELRewardsReceived
        # - event: DepositedValidatorsChanged(uint256)
        #   handler: handleDepositedValidatorsChanged
# config events
        - event: LidoLocatorSet(address)
          handler: handleLidoLocatorSet
        - event: Stopped()
          handler: handleStopped
        - event: Resumed()
          handler: handleResumed
        - event: StakingLimitRemoved()
          handler: handleStakingLimitRemoved
        - event: StakingLimitSet(uint256,uint256)
          handler: handleStakingLimitSet
        - event: StakingResumed()
          handler: handleStakingResumed
        - event: StakingPaused()
          handler: handleStakingPaused
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
        - event: FeeSet(uint16)
          handler: handleFeeSet
        - event: FeeDistributionSet(uint16,uint16,uint16)
          handler: handleFeeDistributionSet
        - event: WithdrawalCredentialsSet(bytes32)
          handler: handleWithdrawalCredentialsSet
        - event: ProtocolContactsSet(address,address,address)
          handler: handleProtocolContractsSet
        - event: ELRewardsWithdrawalLimitSet(uint256)
          handler: handleELRewardsWithdrawalLimitSet
        - event: ELRewardsVaultSet(address)
          handler: handleELRewardsVaultSet
        - event: BeaconValidatorsUpdated(uint256)
          handler: handleBeaconValidatorsUpdated
      blockHandlers:
        - handler: handleTestnetBlock
          filter:
            kind: call
      file: ./src/Lido.ts
  - kind: ethereum/contract
    name: LegacyOracle
    network: goerli
    source:
      address: '0x24d8451BC07e7aF4Ba94F69aCDD9ad3c6579D9FB'
      abi: LegacyOracle
      startBlock: 8710746
      # startBlock: 4533286
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - OracleCompleted
        - OracleMember
#         - OracleQuorumChange
#         - SharesToStethRatio
#         - OracleVersion
#         - AllowedBeaconBalanceRelativeDecrease
#         - AllowedBeaconBalanceAnnualRelativeIncrease
#         - OracleExpectedEpoch
#         - OracleTotalShares
#         - BeaconReport
#         - BeaconSpec
#         - BeaconReportReceiver
      abis:
        - name: LegacyOracle
          file: ./abis/LegacyOracle.json
        - name: NodeOperatorsRegistry
          file: ./abis/NodeOperatorsRegistry.json
      eventHandlers:
        - event: Completed(uint256,uint128,uint128)
          handler: handleCompleted
          receipt: true
        - event: MemberAdded(address)
          handler: handleMemberAdded
        - event: MemberRemoved(address)
          handler: handleMemberRemoved
# internally processed (no need handler)
        # - event: BeaconReported(uint256,uint128,uint128,address)
        #   handler: handleBeaconReported
        # - event: ExpectedEpochIdUpdated(uint256)
        #   handler: handleExpectedEpochIdUpdated
        # - event: PostTotalShares(uint256,uint256,uint256,uint256)
        #   handler: handlePostTotalShares
# config events
        # - event: ContractVersionSet(uint256)
        #   handler: handleContractVersionSet
        # - event: QuorumChanged(uint256)
        #   handler: handleQuorumChanged
        # - event: BeaconSpecSet(uint64,uint64,uint64,uint64)
        #   handler: handleBeaconSpecSet
        # - event: BeaconReportReceiverSet(address)
        #   handler: handleBeaconReportReceiverSet
        # - event: AllowedBeaconBalanceRelativeDecreaseSet(uint256)
        #   handler: handleAllowedBeaconBalanceRelativeDecreaseSet
        # - event: AllowedBeaconBalanceAnnualRelativeIncreaseSet(uint256)
        #   handler: handleAllowedBeaconBalanceAnnualRelativeIncreaseSet
      file: ./src/LegacyOracle.ts

  #   - kind: ethereum/contract
  #     name: NodeOperatorsRegistry
  #     network: goerli
  #     source:
  #       address: '0x9D4AF1Ee19Dad8857db3a45B0374c81c8A1C6320'
  #       abi: NodeOperatorsRegistry
  #       startBlock: 4533286
  #     mapping:
  #       kind: ethereum/events
  #       apiVersion: 0.0.7
  #       language: wasm/assemblyscript
  #       entities:
  #         - NodeOperatorSigningKey
  #         - NodeOperator
  #       abis:
  #         - name: NodeOperatorsRegistry
  #           file: ./abis/NodeOperatorsRegistry.json
  #       eventHandlers:
  #         - event: NodeOperatorAdded(uint256,string,address,uint64)
  #           handler: handleNodeOperatorAdded
  #         - event: NodeOperatorActiveSet(indexed uint256,bool)
  #           handler: handleNodeOperatorActiveSet
  #         - event: NodeOperatorNameSet(indexed uint256,string)
  #           handler: handleNodeOperatorNameSet
  #         - event: NodeOperatorRewardAddressSet(indexed uint256,address)
  #           handler: handleNodeOperatorRewardAddressSet
  #         - event: SigningKeyAdded(indexed uint256,bytes)
  #           handler: handleSigningKeyAdded
  #         - event: SigningKeyRemoved(indexed uint256,bytes)
  #           handler: handleSigningKeyRemoved
  #         - event: NodeOperatorTotalKeysTrimmed(indexed uint256,uint64)
  #           handler: handleNodeOperatorTotalKeysTrimmed
  #         - event: KeysOpIndexSet(uint256)
  #           handler: handleKeysOpIndexSet

  # # lido v2 deprecated
  #         - event: NodeOperatorStakingLimitSet(indexed uint256,uint64)
  #           handler: handleNodeOperatorStakingLimitSet
  #         - event: NodeOperatorTotalStoppedValidatorsReported(indexed uint256,uint64)
  #           handler: handleNodeOperatorTotalStoppedValidatorsReported
  #       file: ./src/NodeOperatorsRegistry.ts
  # - kind: ethereum/contract
  #   name: Voting
  #   network: goerli
  #   source:
  #     address: '0xbc0B67b4553f4CF52a913DE9A6eD0057E2E758Db'
  #     abi: Voting
  #     startBlock: 4533286
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Voting
  #       - Vote
  #       - ChangedSupportRequired
  #       - ChangedMinQuorum
  #       - VotingObjection
  #       - ChangedVoteTime
  #       - ChangedObjectionPhaseTime
  #     abis:
  #       - name: Voting
  #         file: ./abis/Voting.json
  #     eventHandlers:
  #       - event: StartVote(indexed uint256,indexed address,string)
  #         handler: handleStartVote
  #       - event: CastVote(indexed uint256,indexed address,bool,uint256)
  #         handler: handleCastVote
  #       - event: CastObjection(indexed uint256,indexed address,uint256)
  #         handler: handleCastObjection
  #       - event: ExecuteVote(indexed uint256)
  #         handler: handleExecuteVote
  #       - event: ChangeSupportRequired(uint64)
  #         handler: handleChangeSupportRequired
  #       - event: ChangeMinQuorum(uint64)
  #         handler: handleChangeMinQuorum
  #       - event: ChangeVoteTime(uint64)
  #         handler: handleChangeVoteTime
  #       - event: ChangeObjectionPhaseTime(uint64)
  #         handler: handleChangeObjectionPhaseTime
  #     file: ./src/Voting.ts
  - kind: ethereum/contract
    name: EasyTrack
    network: goerli
    source:
      address: '0xAf072C8D368E4DD4A9d4fF6A76693887d6ae92Af'
      abi: EasyTrack
      startBlock: 5574270
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Motion
        - EasyTrackConfig
        - EVMScriptFactory
        - Objection
      abis:
        - name: EasyTrack
          file: ./abis/EasyTrack.json
      eventHandlers:
        - event: EVMScriptExecutorChanged(indexed address)
          handler: handleEVMScriptExecutorChanged
        - event: EVMScriptFactoryAdded(indexed address,bytes)
          handler: handleEVMScriptFactoryAdded
        - event: EVMScriptFactoryRemoved(indexed address)
          handler: handleEVMScriptFactoryRemoved
        - event: MotionCanceled(indexed uint256)
          handler: handleMotionCanceled
        - event: MotionCreated(indexed uint256,address,indexed address,bytes,bytes)
          handler: handleMotionCreated
        - event: MotionDurationChanged(uint256)
          handler: handleMotionDurationChanged
        - event: MotionEnacted(indexed uint256)
          handler: handleMotionEnacted
        - event: MotionObjected(indexed uint256,indexed address,uint256,uint256,uint256)
          handler: handleMotionObjected
        - event: MotionRejected(indexed uint256)
          handler: handleMotionRejected
        - event: MotionsCountLimitChanged(uint256)
          handler: handleMotionsCountLimitChanged
        - event: ObjectionsThresholdChanged(uint256)
          handler: handleObjectionsThresholdChanged
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/EasyTrack.ts
  # - kind: ethereum/contract
  #   name: DepositSecurityModule
  #   network: goerli
  #   source:
  #     address: '0xEd23AD3EA5Fb9d10e7371Caef1b141AD1C23A80c'
  #     abi: DepositSecurityModule
  #     startBlock: 5692116
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - DepositSecurityModuleSettings
  #       - DepositsPause
  #       - DepositsUnpause
  #       - Guardian
  #       - GuardianQuorumChange
  #       - MaxDepositsChange
  #       - MinDepositBlockDistanceChange
  #       - NodeOperatorsRegistryChange
  #       - OwnerChange
  #       - PauseIntentValidityPeriodBlocksChange
  #     abis:
  #       - name: DepositSecurityModule
  #         file: ./abis/DepositSecurityModule.json
  #     eventHandlers:
  #       - event: DepositsPaused(address)
  #         handler: handleDepositsPaused
  #       - event: DepositsUnpaused()
  #         handler: handleDepositsUnpaused
  #       - event: GuardianAdded(address)
  #         handler: handleGuardianAdded
  #       - event: GuardianQuorumChanged(uint256)
  #         handler: handleGuardianQuorumChanged
  #       - event: GuardianRemoved(address)
  #         handler: handleGuardianRemoved
  #       - event: MaxDepositsChanged(uint256)
  #         handler: handleMaxDepositsChanged
  #       - event: MinDepositBlockDistanceChanged(uint256)
  #         handler: handleMinDepositBlockDistanceChanged
  #       - event: NodeOperatorsRegistryChanged(address)
  #         handler: handleNodeOperatorsRegistryChanged
  #       - event: OwnerChanged(address)
  #         handler: handleOwnerChanged
  #       - event: PauseIntentValidityPeriodBlocksChanged(uint256)
  #         handler: handlePauseIntentValidityPeriodBlocksChanged
  #     file: ./src/DepositSecurityModule.ts
  # - kind: ethereum/contract
  #   name: StakingRouter
  #   network: goerli
  #   source:
  #     address: '0xa3Dbd317E53D363176359E10948BA0b1c0A4c820'
  #     abi: StakingRouter
  #     startBlock: 8710746
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - LidoWithdrawalCredential
  #       - StakingModule
  #     abis:
  #       - name: StakingRouter
  #         file: ./abis/StakingRouter.json
  #     eventHandlers:
  #       - event: WithdrawalCredentialsSet(bytes32,address)
  #         handler: handleWithdrawalCredentialsSet
  #     file: ./src/StakingRouter.ts

  - kind: ethereum/contract
    name: AccountingOracle
    network: goerli
    source:
      address: '0x76f358A842defa0E179a8970767CFf668Fc134d6'
      abi: AccountingOracle
      startBlock: 8710746
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - TotalReward
      abis:
        - name: AccountingOracle
          file: ./abis/AccountingOracle.json
        - name: StakingRouter
          file: ./abis/StakingRouter.json
      eventHandlers:
        - event: ProcessingStarted(indexed uint256,bytes32)
          handler: handleProcessingStarted
        - event: ExtraDataSubmitted(indexed uint256,uint256,uint256)
          handler: handleExtraDataSubmitted
          receipt: true
      file: ./src/AccountingOracle.ts
  - kind: ethereum/contract
    name: LidoDAO
    network: goerli
    source:
      address: '0x1dD91b354Ebd706aB3Ac7c727455C7BAA164945A'
      abi: LidoDAO
      # startBlock: 8710746
      startBlock: 4533286
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - AppVersion
      abis:
        - name: LidoDAO
          file: ./abis/LidoDAO.json
        - name: AppRepo
          file: ./abis/AppRepo.json
      eventHandlers:
        - event: SetApp(indexed bytes32,indexed bytes32,address)
          handler: handleSetApp
      file: ./src/LidoDAO.ts
  - kind: ethereum/contract
    name: WithdrawalQueue
    network: goerli
    source:
      address: "0xcf117961421ca9e546cd7f50bc73abcdb3039533"
      abi: WithdrawalQueue
      startBlock: 8710746
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - WithdrawalClaimed
        - WithdrawalRequested
        - WithdrawalsFinalized
      abis:
        - name: WithdrawalQueue
          file: ./abis/WithdrawalQueue.json
      eventHandlers:
        - event: BunkerModeDisabled()
          handler: handleBunkerModeDisabled
        - event: BunkerModeEnabled(uint256)
          handler: handleBunkerModeEnabled
        - event: ContractVersionSet(uint256)
          handler: handleContractVersionSet
        - event: Paused(uint256)
          handler: handlePaused
        - event: Resumed()
          handler: handleResumed
        - event: WithdrawalClaimed(indexed uint256,indexed address,indexed address,uint256)
          handler: handleWithdrawalClaimed
        - event: WithdrawalRequested(indexed uint256,indexed address,indexed address,uint256,uint256)
          handler: handleWithdrawalRequested
        - event: WithdrawalsFinalized(indexed uint256,indexed uint256,uint256,uint256,uint256)
          handler: handleWithdrawalsFinalized
        - event: WithdrawalBatchFinalized(indexed uint256,indexed uint256,uint256,uint256,uint256)
          handler: handleWithdrawalBatchFinalized
      file: ./src/WithdrawalQueue.ts
